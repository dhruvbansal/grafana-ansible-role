##################### Grafana Configuration Example #####################
#
# Everything has defaults so you only need to uncomment things you want to
# change

# possible values : production, development
app_mode = {{ grafana_app_mode }}

#################################### Paths ####################################
[paths]
# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)
#
data = {{ grafana_data_dir }}
#
# Directory where grafana can store logs
#
logs = {{ grafana_log_dir }}

#################################### Server ####################################
[server]
# Protocol (http or https)
protocol = {{ grafana_protocol }}

# The ip address to bind to, empty will bind to all interfaces
http_addr = {{ grafana_address }}

# The http port  to use
http_port = {{ grafana_port }}

# The public facing domain name used to access grafana from a browser
domain = {{ grafana_fqdn }}

# Redirect to correct domain if host header does not match domain
# Prevents DNS rebinding attacks
enforce_domain = {{ grafana_enforce_domain | lower }}

# The full public facing url
{% if grafana_root_url %}root_url = %(protocol)s://%(domain)s:%(http_port)s/{% endif %}

# Log web requests
router_logging = {{ grafana_router_logging | lower }}

# the path relative working path
;static_root_path = public

# enable gzip
enable_gzip = {{ grafana_enable_gzip | lower }}

# https certs & key file
{% if grafana_cert_file %};cert_file ={{ grafana_cert_file }}{% endif %}
{% if grafana_cert_key  %};cert_key ={{ grafana_cert_key }}{% endif %}

#################################### Database ####################################
[database]
# Either "mysql", "postgres" or "sqlite3", it's your choice
type = {{ grafana_database_type }}
{% if grafana_database_host %}host = {{ grafana_database_host }}{% endif %}
name = {{ grafana_database_name }}
user = {{ grafana_database_user }}
password = {{ grafana_database_password }}

# For "postgres" only, either "disable", "require" or "verify-full"
{% if grafana_database_ssl_mode %}ssl_mode = {{ grafana_database_ssl_mode}}{% endif %}

# For "sqlite3" only, path relative to data_path setting
{% if grafana_database_path %}path = {{ grafana_database_path }}{% endif %}

#################################### Session ####################################
[session]
# Either "memory", "file", "redis", "mysql", "postgres", default is "file"
;provider = file

# Provider config options
# memory: not have any config yet
# file: session dir path, is relative to grafana data_path
# redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`
# mysql: go-sql-driver/mysql dsn config string, e.g. `user:password@tcp(127.0.0.1:3306)/database_name`
# postgres: user=a password=b host=localhost port=5432 dbname=c sslmode=disable
;provider_config = sessions

# Session cookie name
;cookie_name = grafana_sess

# If you use session in https only, default is false
;cookie_secure = false

# Session life time, default is 86400
;session_life_time = 86400

#################################### Analytics ####################################
[analytics]
# Server reporting, sends usage counters to stats.grafana.org every 24 hours.
# No ip addresses are being tracked, only simple counters to track
# running instances, dashboard and error counts. It is very helpful to us.
# Change this option to false to disable reporting.
reporting_enabled = {{ grafana_reporting_enabled | lower }}

# Google Analytics universal tracking code, only enabled if you specify an id here
;google_analytics_ua_id =

#################################### Security ####################################
[security]
# default admin user, created on startup
admin_user = {{ grafana_admin_user }}

# default admin password, can be changed before first start of grafana,  or in profile settings
admin_password = {{ grafana_admin_password }}

# used for signing
{% if grafana_secret %}secret_key = {{ grafana_secret }}{% endif %}

# Auto-login remember days
login_remember_days = {{ grafana_login_remember_days }}
cookie_username = {{ grafana_cookie_username }}
cookie_remember_name = {{ grafana_cookie_remember_name }}

# disable gravatar profile images
disable_gravatar = {{ grafana_disable_gravatar | lower }}

# data source proxy whitelist (ip_or_domain:port seperated by spaces)
;data_source_proxy_whitelist =

#################################### Users ####################################
[users]
# disable user signup / registration
allow_sign_up = {{ grafana_allow_sign_up | lower }}

# Allow non admin users to create organizations
allow_org_create = {{ grafana_allow_org_create | lower }}

# Set to true to automatically assign new users to the default organization (id 1)
auto_assign_org = {{ grafana_auto_assign_org | lower }}

# Default role new users will be automatically assigned (if disabled above is set to true)
;auto_assign_org_role = Viewer

# Background text for the user field on the login page
login_hint = {{ grafana_login_hint }}

#################################### Anonymous Auth ##########################
[auth.anonymous]
# enable anonymous access
enabled = {{ grafana_anonymous_enabled | lower }}

# specify organization name that should be used for unauthenticated users
org_name = "{{ grafana_org_name }}"

# specify role for unauthenticated users
;org_role = Viewer

#################################### Github Auth ##########################
[auth.github]
;enabled = false
;allow_sign_up = false
;client_id = some_id
;client_secret = some_secret
;scopes = user:email,read:org
;auth_url = https://github.com/login/oauth/authorize
;token_url = https://github.com/login/oauth/access_token
;api_url = https://api.github.com/user
;team_ids =
;allowed_organizations =

#################################### Google Auth ##########################
[auth.google]
;enabled = false
;allow_sign_up = false
;client_id = some_client_id
;client_secret = some_client_secret
;scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
;auth_url = https://accounts.google.com/o/oauth2/auth
;token_url = https://accounts.google.com/o/oauth2/token
;api_url = https://www.googleapis.com/oauth2/v1/userinfo
;allowed_domains =

#################################### Auth Proxy ##########################
[auth.proxy]
;enabled = false
;header_name = X-WEBAUTH-USER
;header_property = username
;auto_sign_up = true

#################################### Basic Auth ##########################
[auth.basic]
;enabled = true

#################################### Auth LDAP ##########################
[auth.ldap]
;enabled = false
;config_file = /etc/grafana/ldap.toml

#################################### SMTP / Emailing ##########################
[smtp]
;enabled = false
;host = localhost:25
;user =
;password =
;cert_file =
;key_file =
;skip_verify = false
;from_address = admin@grafana.localhost

[emails]
;welcome_email_on_sign_up = false

#################################### Logging ##########################
[log]
# Either "console", "file", default is "console"
# Use comma to separate multiple modes, e.g. "console, file"
mode = {{ grafana_logging_mode }}

# Buffer length of channel, keep it as it is if you don't know what it is.
;buffer_len = 10000

# Either "Trace", "Debug", "Info", "Warn", "Error", "Critical", default is "Trace"
;level = Info

# For "console" mode only
[log.console]
;level =

# For "file" mode only
[log.file]
;level =
# This enables automated log rotate(switch of following options), default is true
;log_rotate = true

# Max line number of single file, default is 1000000
;max_lines = 1000000

# Max size shift of single file, default is 28 means 1 << 28, 256MB
;max_lines_shift = 28

# Segment log daily, default is true
;daily_rotate = true

# Expired days of log file(delete after max days), default is 7
;max_days = 7

#################################### AMPQ Event Publisher ##########################
[event_publisher]
;enabled = false
;rabbitmq_url = amqp://localhost/
;exchange = grafana_events

;#################################### Dashboard JSON files ##########################
[dashboards.json]
;enabled = false
;path = /var/lib/grafana/dashboards
